·RECETA:

vnx -f openstack_lab-odl.xml -t ó vnx -f openstack_lab-odl.xml -v --create
vnx -f openstack_lab-odl.xml -v -x start-all,load-img 
vnx -f openstack_lab.xml -v --destroy

-> OPENDAYLIGHT:

slogin root@opendaylight 
wget version_ODL_URL
tar -zxvf version_ODL.tar.gz
cd version_ODL_dir/
./bin/start
sleep 5
# Instalación de dependencias o plugins básicos
./bin/client -> "feature:install odl-netvirt-openstack odl-dlux-core odl-mdsal-apidocs odl-restconf-all odl-neutron-service odl-neutron-hostconfig-ovs"
./bin/client -> "feature:list -i"

*** Añadir las dependencias o plugins desde etc/org.apache.karaf.features.cfg al final de la línea con etiqueta "featuresBoot" y posteriormente inicial karaf Shell (./bin/karaf):

odl-neutron-service,odl-restconf-all,odl-aaa-authn,odl-dlux-core,odl-mdsal-apidocs,odl-dluxapps-nodes,odl-dluxapps-topology,odl-dluxapps-yangui,odl-dluxapps-yangvisualizer,odl-l2switch-switch,odl-l2switch-switch-ui,odl-ovsdb-hwvtepsouthbound-ui,odl-ovsdb-southbound-impl-ui,odl-netvirt-ui,odl-openflowplugin-flow-services-ui,odl-netvirt-openstack,odl-neutron-logger

*** Acceder a ODL GUI: http://10.20.0.18:8181/index.html

-> CONTROLLER:

slogin root@controller
service neutron-server stop 

pip install networking-odl (*** instalar con pip y pip2)

#scp idefix.dit.upm.es:neutron.conf idefix.dit.upm.es:ml2_conf.ini idefix.dit.upm.es:dhcp_agent.ini .
#cp neutron.conf /etc/neutron/
#cp ml2_conf.ini /etc/neutron/plugins/ml2/
#cp dhcp_agent.ini /etc/neutron/

- Modificar archivo /etc/neutron/neutron.conf

###############################################################################

[DEFAULT]

core_plugin = neutron.plugins.ml2.plugin.Ml2Plugin
#core_plugin = ml2

...

service_plugins = odl-router_v2

...

# Driver to use for scheduling router to a default L3 agent (string value)
router_scheduler_driver = neutron.scheduler.l3_agent_scheduler.LeastRoutersScheduler

# Allow auto scheduling of routers to L3 agent. (boolean value)
router_auto_schedule = true


###############################################################################


- Modificar archivo /etc/neutron/plugins/ml2/ml2_conf.ini

###############################################################################

[ml2]

type_drivers = local,flat,vlan,vxlan

tenant_network_types = vxlan,flat,vlan

mechanism_drivers = opendaylight_v2

extension_drivers = port_security,qos


[securitygroup]

enable_security_group = true

# Driver for security groups firewall in the L2 agent (string value)
firewall_driver = neutron.agent.not.a.real.FirewallDriver

[ml2_odl]

enable_dhcp_service = true
port_binding_controller = pseudo-agentdb-binding
#port_binding_controller = network-topology
password = admin
username = admin
url = http://10.20.0.18:8181/controller/nb/v2/neutron

(*** puerto 8080 o 8181 dependiendo de la versión del controlador ODL)

###############################################################################

mysql -u root --password='xxxx' -e "DROP DATABASE neutron;"
mysql -u root --password='xxxx' -e "CREATE DATABASE neutron;"
mysql -u root --password='xxxx' -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'xxxx';"
mysql -u root --password='xxxx' -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'xxxx';"
mysql -u root --password='xxxx' -e "flush privileges;"

(1)
su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

(2)
su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/dhcp_agent.ini --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

***
neutron-db-manage --subproject networking-odl upgrade head
***

service neutron-server restart
curl -u admin:admin http://10.0.0.12:8181/controller/nb/v2/neutron/networks (*** puerto 8080 o 8181 dependiendo de la versión del controlador ODL)


service nova-api restart
service nova-consoleauth restart
service nova-scheduler restart
service nova-conductor restart
service nova-novncproxy restart


- Crear escenario demo:

###############################################################################

# Load admin credentials
source /root/bin/admin-openrc.sh

# Create internal network
openstack network create net0
openstack subnet create --network net0 --gateway 10.1.1.1 --dns-nameserver 8.8.8.8 --subnet-range 10.1.1.0/24 --allocation-pool start=10.1.1.8,end=10.1.1.100 subnet0

# Create virtual machine
mkdir -p /root/keys
openstack keypair create vm1 > /root/keys/vm1
openstack server create --flavor m1.tiny --image cirros-0.3.4-x86_64-vnx vm1 --nic net-id=net0 --key-name vm1
openstack keypair create vm2 > /root/keys/vm2
openstack server create --flavor m1.tiny --image cirros-0.3.4-x86_64-vnx vm2 --nic net-id=net0 --key-name vm2

# Create external network
openstack network create --share --external --provider-physical-network provider --provider-network-type flat ExtNet
openstack subnet create --network ExtNet --gateway 10.0.10.1 --dns-nameserver 10.0.10.1 --subnet-range 10.0.10.0/24 --allocation-pool start=10.0.10.100,end=10.0.10.200 ExtSubNet

# Create router
openstack router create r0
openstack router set r0 --external-gateway ExtNet
openstack router add subnet r0 subnet0

# Assign floating IP address to vm1
openstack server add floating ip vm1 $( openstack floating ip create ExtNet -c floating_ip_address -f value )

# Assign floating IP address to vm2
openstack server add floating ip vm2 $( openstack floating ip create ExtNet -c floating_ip_address -f value )

# Create security group rules to allow ICMP, SSH and WWW access
openstack security group rule create --proto icmp --dst-port 0  default
openstack security group rule create --proto tcp  --dst-port 80 default
openstack security group rule create --proto tcp  --dst-port 22 default
###############################################################################



-> NETWORK:

slogin root@network
pip install networking-odl (*)
service neutron-openvswitch-agent stop
systemctl disable neutron-openvswitch-agent
service neutron-l3-agent stop
systemctl disable neutron-l3-agent
service neutron-lbaasv2-agent stop
service neutron-dhcp-agent stop
service neutron-metadata-agent stop
service openvswitch-switch stop
sleep 1
rm -rf /var/log/openvswitch/*
rm -rf /etc/openvswitch/conf.db
sleep 1
service openvswitch-switch start
ovs-vsctl show

- networking-odl & neutron-odl-ovs-hostconfig:

###############################################################################

(1)

sudo neutron-odl-ovs-hostconfig

(2)

cd /usr/local/lib/python2.7/dist-packages/networking_odl/cmd

python set_ovs_hostconfigs.py --noovs_dpdk --ovs_hostconfigs='{"ODL L2":{"allowed_network_types":["local","flat","vlan","vxlan","gre"],"bridge_mappings":{"provider":"eth4"},"supported_vnic_types": [{"vnic_type":"normal","vif_type":"ovs","vif_details":{}}]},"ODL L3": {}}'

python set_ovs_hostconfigs.py --noovs_dpdk

###############################################################################


sudo ovs-vsctl add-br br-provider
sudo ovs-vsctl add-port br-provider eth4
sudo ovs-vsctl set-controller br-provider tcp:10.0.0.12:6653
sudo ovs-vsctl set Bridge br-provider fail-mode=secure
sudo ovs-vsctl set Open_vSwitch . other_config:local_ip=10.0.1.21
sudo ovs-vsctl set Open_vSwitch . other_config:provider_mappings=provider:eth4
sudo ovs-vsctl add-br br-vlan
sudo ovs-vsctl add-port br-vlan eth3

ovs-vsctl set-manager ptcp:6640:127.0.0.1 tcp:10.0.0.12:6640
sleep 1
ovs-vsctl show


-Modificar archivo /etc/dhcp/dhcp_agent.ini:

###############################################################################

interface_driver = openvswitch
force_metadata = true

[ovs]
#ovsdb_connection = tcp:10.0.0.21:6640
ovsdb_connection = tcp:127.0.0.1:6640

###############################################################################

service neutron-dhcp-agent restart
service neutron-metadata-agent restart

-> COMPUTE1:

slogin root@compute1
pip install networking-odl (*)
service neutron-openvswitch-agent stop
systemctl disable neutron-openvswitch-agent
service openvswitch-switch stop
sleep 1
rm -rf /var/log/openvswitch/*
rm -rf /etc/openvswitch/conf.db
sleep 1
service openvswitch-switch start
ovs-vsctl show

- networking-odl & neutron-odl-ovs-hostconfig:

###############################################################################

(1)

sudo neutron-odl-ovs-hostconfig

(2)

cd /usr/local/lib/python2.7/dist-packages/networking_odl/cmd

python set_ovs_hostconfigs.py --noovs_dpdk --ovs_hostconfigs='{"ODL L2":{"allowed_network_types":["local","flat","vlan","vxlan","gre"],"bridge_mappings":{"provider":"eth4"},"supported_vnic_types": [{"vnic_type":"normal","vif_type":"ovs","vif_details":{}}]}}'

python set_ovs_hostconfigs.py --noovs_dpdk

###############################################################################

ovs-vsctl set-manager ptcp:6640:127.0.0.1 tcp:10.0.0.12:6640
*** sudo ovs-vsctl add-br br-ex
sudo ovs-vsctl set Open_vSwitch . other_config:local_ip=10.0.1.31
*** sudo ovs-vsctl set Open_vSwitch . other_config:provider_mappings=external:br-ex
sleep 1
ovs-vsctl show

- Modificar archivo /etc/nova/nova.conf

###############################################################################

[os_vif_ovs]
#ovsdb_connection = tcp:127.0.0.1:6640
ovsdb_connection = tcp:10.0.0.21:6640

###############################################################################

service nova-compute restart


-> COMPUTE2:

slogin root@compute2
pip install networking-odl (*)
service neutron-openvswitch-agent stop
systemctl disable neutron-openvswitch-agent
service openvswitch-switch stop
sleep 1
rm -rf /var/log/openvswitch/*
rm -rf /etc/openvswitch/conf.db
sleep 1
service openvswitch-switch start
ovs-vsctl show

- networking-odl & neutron-odl-ovs-hostconfig:

###############################################################################

(1)

sudo neutron-odl-ovs-hostconfig

(2)

cd /usr/local/lib/python2.7/dist-packages/networking_odl/cmd

python set_ovs_hostconfigs.py --noovs_dpdk --ovs_hostconfigs='{"ODL L2":{"allowed_network_types":["local","flat","vlan", "vxlan","gre"],"bridge_mappings":{"provider":"eth4"},"supported_vnic_types": [{"vnic_type":"normal","vif_type":"ovs","vif_details":{}}]}}'

python set_ovs_hostconfigs.py --noovs_dpdk

###############################################################################

ovs-vsctl set-manager ptcp:6640:127.0.0.1 tcp:10.0.0.12:6640
*** sudo ovs-vsctl add-br br-ex
sudo ovs-vsctl set Open_vSwitch . other_config:local_ip=10.0.1.32
*** sudo ovs-vsctl set Open_vSwitch . other_config:provider_mappings=external:br-ex
sleep 1
ovs-vsctl show

- Modificar archivo /etc/nova/nova.conf: 

###############################################################################

[os_vif_ovs]
#ovsdb_connection = tcp:127.0.0.1:6640
ovsdb_connection = tcp:10.0.0.21:6640

###############################################################################

service nova-compute restart



-> pip install networking-odl (*):

apt-get update
apt-get install -y python-pip
pip2 install networking-odl
pip install networking-odl

-> Comandos adicionales en network y computes:

apt-get update
apt-get install -y python-pip

(¡EN ESTE ORDEN!)
pip2 install networking-odl
pip install networking-odl

sudo neutron-odl-ovs-hostconfig


-> Comandos de interés en Opendaylight:

- Listar features disponibles:

feature:list

- Listar features instaladas:

feature:list -i


-> Otros comandos:

# borrar registros y logs OVS:
cd /etc/openvswitch/
sudo rm conf.db .conf.db.~lock~
cd /var/log/openvswitch/
sudo rm ovs*
cd

# buscar dato entre los archivos de un directorio
grep -rnw '.' -e "dato"
grep dato *

# llegar al final de un archivo con nano:
nano +999999999999999999 archivo

# llegar al final de un archivo con less:
less archivo (y una vez dentro pulsar 'G')

# output a global value not in a section
crudini --get config_file '' parameter

# Add/Update a var
crudini --set config_file section parameter value

# neutron-server service logs
cat /var/log/neutron/neutron-server.log

# ver instancias VMs en nodos de cómputo
virsh list

# load admin credentials
source /root/bin/admin-openrc.sh

# determinar servicios agentes de red de neutron
openstack network agent list
openstack network agent show <id_agent>

# determinar servicios de computación
openstack compute service list

# namespaces en nodo de red
$ ip netns
qdhcp-08dfd7e6-8977-48d8-98da-290462445903 (id: 2)
qdhcp-449a8227-0a0e-434c-8c51-a22048428dfc (id: 1)

$ ip netns exec qdhcp-xxxx ifconfig -a

$ ip netns exec qdhcp-xxxx ping a.b.c.d

$ ip netns exec qdhcp-xxxx tcpdump -nei tapxxxx

# uso tcpdump
tcpdump -i eth2 -e

# ver entradas de flujo de los OVS
ovs-dpctl dump-flows

# router port list and state
openstack port list --router r0

